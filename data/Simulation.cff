
   # REMINDER : det.simulation need a startup seed;
   # in your cfg, do NOT forget to give seeds via RandomNumberGeneratorService !!!
   # 
   # Example configuration of the RandomNumberGeneratorService to appear in cfg:
   # service = RandomNumberGeneratorService
   # {
   #   untracked uint32 sourceSeed = 123456789
   #   PSet moduleSeeds =
   #   {
   #      untracked uint32 VtxSmeared = 98765432
   #      untracked uint32 g4SimHits  = 11
   #      untracked uint32 mix        = 12345
   #   }
   # }
   
   # Vertex smearing is exectuted in the pgen sequence
   
   # Geant4-based detector simulation
   # (necessary geometry and mag.field records included)
   #
   # It retuns label "g4SimHits" that one places in the path
   #
   # Advise : OscarProducer has a config. parameter to control
   # which HepMCProduct (gen.info) to pickup as event input, 
   # the original or the one with the vertex smearing applied; 
   # the parameter's name is HepMCProductLabel, it belongs to
   # the PSet Generator, and the default = "VtxSmeared"
   #
   include "SimG4Core/Configuration/data/SimG4Core.cff"
   #
   # if you want to skip vertex smearing, you need to reset it:
   # replace g4SimHits.Generator.HepMCProductLabel = "source"
   #
   # several other useful parameters are listed in the WorkBook:
   # https://twiki.cern.ch/twiki/bin/view/CMS/WorkBookSimDigi

   #
   # include TrackingParticle Producer
   # NOTA BENE: it MUST be run here at the moment, since it depends 
   # of the availability of the CrossingFrame in the Event
   #
   include "SimGeneral/Configuration/data/SimGeneral.cff"

   # Digitization (electronics response modeling)
   # (all necessary geometry and other records included in the cff's)
   #
   # returns sequence "doAllDigi"
   #
   include "Configuration/StandardSequences/data/Digi.cff"

   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   sequence psim  = { g4SimHits }
   sequence pdigi = { mix, doAllDigi, trackingParticles }
   sequence simulation = { psim, pdigi }
#
