#
# Tracker alignment
#
include "CalibTracker/Configuration/data/Tracker_FrontierAlignment.cff"
#
# Tracker alignment: from Frontier
# it contains replaces
# needed for frontier access on new dev servlet
replace trackerAlignment.connect = "frontier://FrontierDev/CMS_COND_ALIGNMENT"
replace trackerAlignment.toGet = {
        { string record = "TrackerAlignmentRcd"      string tag = "TrackerIdealGeometry150" },
        { string record = "TrackerAlignmentErrorRcd" string tag = "TrackerIdealGeometryErrors150" }
       }
####################################################################################
#
# Muon alignment
#
include "CalibMuon/Configuration/data/Muon_FrontierAlignment.cff"
#
# Muon alignment: from Frontier 
# it contain replaces
#
# needed for frontier access on new dev servlet
replace muonAlignment.connect = "frontier://FrontierDev/CMS_COND_ALIGNMENT"
replace muonAlignment.toGet = {
         { string record = "DTAlignmentRcd"           string tag = "DTIdealGeometry150" },
         { string record = "DTAlignmentErrorRcd"      string tag = "DTIdealGeometryErrors150" },
         { string record = "CSCAlignmentRcd"          string tag = "CSCIdealGeometry150" },
         { string record = "CSCAlignmentErrorRcd"     string tag = "CSCIdealGeometryErrors150" }
       }
#
###################################################################
#
# Pixel calib OK!!!
#
include "CalibTracker/Configuration/data/SiPixel_FrontierGain.cff"

# needed for frontier access on new dev servlet
replace siPixelGainCalibration.connect = "frontier://FrontierDev/CMS_COND_PIXEL"

# the following is needed because the default is false,
replace siPixelClusters.UseCalibDataFromDB = true

###################################################################
#
# Strip calib OK
#
include "CalibTracker/Configuration/data/SiStrip_FrontierGain.cff"
include "CalibTracker/Configuration/data/SiStrip_FrontierNoise.cff"
include "CalibTracker/Configuration/data/SiStrip_FrontierLorentzAngle.cff"

# needed for frontier access on new dev servlet
replace siStripApvGain.connect = "frontier://FrontierDev/CMS_COND_STRIP"
replace siStripApvGain.toGet = {{ string record = "SiStripApvGainRcd"
                                  string tag = "CSA07_SiStrip_Ideal_Gain" }}

replace siStripLorentzAngle.connect = "frontier://FrontierDev/CMS_COND_STRIP"
replace siStripLorentzAngle.toGet = {{ string record = "SiStripLorentzAngleRcd" 
                                       string tag = "CSA07_SiStrip_Ideal_LAngle" }}

replace siStripNoise.connect = "frontier://FrontierDev/CMS_COND_STRIP"
replace siStripNoise.toGet = {{ string record = "SiStripNoisesRcd" 
                                       string tag = "CSA07_SiStrip_Noise" }}



# these need to be there for no DB (default is db usage)
replace siStripDigis.UseCalibDataFromDB  = true
replace siStripClusters.UseCalibDataFromDB  = true
#############################################################################
#
# DT calib

# the fake  is NEEDED to provide TTRIG (not in DB for now). Only object in db is T0
# for the moment
include "CalibMuon/Configuration/data/DT_FakeConditions.cff"
include "CalibMuon/Configuration/data/DT_FrontierConditions.cff"

# the following is to get only t0 from db
replace maps_frontier.toGet = {{string record = "DTT0Rcd" 
                                string tag = "t0Fake" }}

# these need to be there for DB (default is false)
replace  DTParametrizedDriftAlgo_CSA07.recAlgoConfig.tTrigModeConfig.doT0Correction = true

###########################################################################################
#
# CSC Calib OK (used also for digis)
#
include "CalibMuon/Configuration/data/CSC_FrontierConditions.cff"

# needed for frontier access on new dev servlet

replace cscConditions.connect = "frontier://FrontierDev/CMS_COND_CSC"
replace cscConditions.toGet = {
	{ string record = "CSCGainsRcd"
          string tag = "CSCGains_ideal"},
        {string record = "CSCNoiseMatrixRcd"
          string tag = "CSCNoiseMatrix_ideal"},
        {string record = "CSCcrosstalkRcd"
          string tag = "CSCCrosstalk_ideal"},
        {string record = "CSCPedestalsRcd"
	 string tag = "CSCPedestals_ideal"} 
     }

###########################################################################################
#
# HCAL Fake Conditions (need to wait for decisions)
#
include "CalibCalorimetry/Configuration/data/Hcal_FrontierConditions.cff"
###########################################################################################
#
# ECAL Frontier Conditions
#
include "CalibCalorimetry/Configuration/data/Ecal_FrontierConditions.cff"
replace ecalConditions.connect = "frontier://FrontierDev/CMS_COND_ECAL"
###########################################################################################
#
